apiVersion: apps/v1
kind: Deployment
metadata:
  name: infinigram
  namespace: default
  labels:
    app: infinigram
spec:
  replicas: 1
  selector:
    matchLabels:
      app: infinigram
  template:
    metadata:
      labels:
        app: infinigram
    spec:
      containers:
      - name: infinigram
        image: gcr.io/consus-394000/ashish/infinigram:latest
        imagePullPolicy: Always
        command: ["python3", "api/api_server.py", "--FLASK_PORT=5000", "--MODE=api", "--CONFIG_FILE=/app/api_config.json"]
        ports:
        - containerPort: 5000
          name: http
        envFrom:
        - configMapRef:
            name: infinigram-config
        volumeMounts:
        - name: v4-pileval-llama
          mountPath: /data-v4-pileval-llama/v4_pileval_llama
        - name: config-volume
          mountPath: /app/api_config.json
          subPath: api_config.json
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: gcsfuse-sidecar
        image: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
        command:
          - /bin/bash
          - -c
          - |
            set -ex
            echo "Starting GCS FUSE sidecar..."
            apt-get update && apt-get install -y lsb-release curl
            export GCSFUSE_REPO=gcsfuse-$(lsb_release -c -s)
            echo "deb http://packages.cloud.google.com/apt $GCSFUSE_REPO main" | tee /etc/apt/sources.list.d/gcsfuse.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
            apt-get update && apt-get install -y gcsfuse
            mkdir -p /tmp/gcs-mount
            echo "Attempting to mount bucket..."
            gcsfuse --implicit-dirs infinigram_v4_pileval_llama /tmp/gcs-mount &
            MOUNT_PID=$!
            echo "Mount process started with PID: $MOUNT_PID"
            # Wait for mount to be ready
            sleep 10
            echo "Checking mount status..."
            ls -la /tmp/gcs-mount || echo "Mount not ready yet"
            echo "Mount successful. Contents:"
            ls -la /tmp/gcs-mount
            # Copy data to shared volume for main container
            echo "Copying data to shared volume..."
            if [ -d "/tmp/gcs-mount/v4_pileval_llama" ]; then
              cp -r /tmp/gcs-mount/v4_pileval_llama/* /data-v4-pileval-llama/v4_pileval_llama/ 2>/dev/null || echo "No data to copy or copy failed"
            else
              cp -r /tmp/gcs-mount/* /data-v4-pileval-llama/v4_pileval_llama/ 2>/dev/null || echo "No data to copy or copy failed"
            fi
            echo "Data copied to shared volume"
            echo "Keeping mount alive..."
            wait $MOUNT_PID &
            echo "Sidecar is ready. Keeping container alive..."
            # Keep the container running
            while true; do
              sleep 30
              # Check if mount is still active
              if ! mountpoint -q /tmp/gcs-mount; then
                echo "GCS mount lost, exiting..."
                exit 1
              fi
              # Sync data to shared volume periodically
              echo "Syncing data to shared volume..."
              if [ -d "/tmp/gcs-mount/v4_pileval_llama" ]; then
                cp -r /tmp/gcs-mount/v4_pileval_llama/* /data-v4-pileval-llama/v4_pileval_llama/ 2>/dev/null || echo "Sync completed"
              else
                cp -r /tmp/gcs-mount/* /data-v4-pileval-llama/v4_pileval_llama/ 2>/dev/null || echo "Sync completed"
              fi
              echo "Mounts still active, continuing..."
            done
        securityContext:
          privileged: true
        volumeMounts:
          - name: v4-pileval-llama
            mountPath: /data-v4-pileval-llama/v4_pileval_llama
          - name: v4-pileval-llama
            mountPath: /data-v4-pileval-llama/v4_pileval_llama
      volumes:
      - name: index-data
        persistentVolumeClaim:
          claimName: infinigram-index-pvc
      - name: config-volume
        configMap:
          name: infinigram-config
      - name: v4-pileval-llama
        emptyDir: {} 